<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="App.Name" xml:space="preserve">
    <value>Kiritori</value>
  </data>
  <data name="PrefForm.Title" xml:space="preserve">
    <value>設定メニュー</value>
  </data>
  <data name="Tab.General" xml:space="preserve">
    <value>全般</value>
  </data>
  <data name="Tab.Appearance" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="Tab.Shortcut" xml:space="preserve">
    <value>ショートカット</value>
  </data>
  <data name="Tab.Advanced" xml:space="preserve">
    <value>高度な設定</value>
  </data>
  <data name="Tab.Info" xml:space="preserve">
    <value>アプリ情報</value>
  </data>
  <data name="Text.AppSetting" xml:space="preserve">
    <value>アプリケーション設定</value>
  </data>
  <data name="Text.Language" xml:space="preserve">
    <value>表示言語</value>
  </data>
  <data name="Text.Startup" xml:space="preserve">
    <value>起動設定</value>
  </data>
  <data name="Text.Runatstartup" xml:space="preserve">
    <value>自動起動</value>
  </data>
  <data name="Text.BtnStartupFolder" xml:space="preserve">
    <value>スタートアップフォルダーを開く</value>
  </data>
  <data name="Text.HistoryLimit" xml:space="preserve">
    <value>履歴の保存件数</value>
  </data>
  <data name="Text.Hotkeys" xml:space="preserve">
    <value>グローバルホットキー設定</value>
  </data>
  <data name="Text.ImageCapture" xml:space="preserve">
    <value>画像キャプチャー</value>
  </data>
  <data name="Text.PreviousCapture" xml:space="preserve">
    <value>前回と同じ場所をキャプチャー</value>
  </data>
  <data name="Text.VideoCapture" xml:space="preserve">
    <value>リアルタイムキャプチャー</value>
  </data>
  <data name="Text.BtnExit" xml:space="preserve">
    <value>Kiritoriアプリを終了</value>
  </data>
  <data name="Text.BtnSave" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Text.BtnCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Text.CaptureSetting" xml:space="preserve">
    <value>キャプチャー設定</value>
  </data>
  <data name="Text.Option" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="Text.ShowGuide" xml:space="preserve">
    <value>ガイドライン表示</value>
  </data>
  <data name="Text.NotifyTray" xml:space="preserve">
    <value>キャプチャー時にトレイ通知</value>
  </data>
  <data name="Text.Background" xml:space="preserve">
    <value>キャプチャー背景</value>
  </data>
  <data name="Text.WindowSetting" xml:space="preserve">
    <value>ウィンドウ設定</value>
  </data>
  <data name="Text.DropShadow" xml:space="preserve">
    <value>影表示</value>
  </data>
  <data name="Text.AlwaysOnTop" xml:space="preserve">
    <value>最前面固定</value>
  </data>
  <data name="Text.HighlightOnHover" xml:space="preserve">
    <value>ホバー時の強調表示</value>
  </data>
  <data name="Text.HighlightColor" xml:space="preserve">
    <value>強調色</value>
  </data>
  <data name="Text.HighlightThickness" xml:space="preserve">
    <value>強調ボーダーの太さ(px)</value>
  </data>
  <data name="Text.WindowOpacity" xml:space="preserve">
    <value>ウィンドウの不透明度</value>
  </data>
  <data name="Text.WindowOperation" xml:space="preserve">
    <value>ウィンドウ操作</value>
  </data>
  <data name="Text.Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="Text.Minimize" xml:space="preserve">
    <value>最小化</value>
  </data>
  <data name="Text.Move" xml:space="preserve">
    <value>移動</value>
  </data>
  <data name="Text.Copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="Text.Print" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="Text.ZoomIn" xml:space="preserve">
    <value>拡大</value>
  </data>
  <data name="Text.ZoomOut" xml:space="preserve">
    <value>縮小</value>
  </data>
  <data name="Text.ZoomReset" xml:space="preserve">
    <value>サイズリセット</value>
  </data>
  <data name="Text.SquareCrop" xml:space="preserve">
    <value>正方形切り抜き</value>
  </data>
  <data name="Text.Snap" xml:space="preserve">
    <value>ガイドスナップ</value>
  </data>
  <data name="Text.ShowScreen" xml:space="preserve">
    <value>メニューウィンドウを起動時に表示しない</value>
  </data>
  <data name="Text.TipTasktray" xml:space="preserve">
    <value>Tips: タスクトレイに最小化されます。アイコンを右クリックするとメニューが表示されます。</value>
  </data>
  <data name="Text.WhatIs1" xml:space="preserve">
    <value>Kiritoriとは</value>
  </data>
  <data name="Text.WhatIs2" xml:space="preserve">
    <value>• 画面を切り取って付箋のように固定します</value>
  </data>
  <data name="Text.BtnStartupSetting" xml:space="preserve">
    <value>スタートアップ設定を開く</value>
  </data>
  <data name="Text.PlaySound" xml:space="preserve">
    <value>キャプチャー時に音を鳴らす</value>
  </data>
  <data name="Text.StartupManaged" xml:space="preserve">
    <value>スタートアップはWindowsによって管理されます</value>
  </data>
  <data name="Text.StartupManagedTip" xml:space="preserve">
    <value>設定 &gt; アプリ &gt; スタートアップ</value>
  </data>
  <data name="Text.UnableSetStartup" xml:space="preserve">
    <value>スタートアップ設定が更新できませんでした</value>
  </data>
  <data name="Text.ConfirmExit" xml:space="preserve">
    <value>アプリケーションを閉じますか？</value>
  </data>
  <data name="Text.ConfirmExitTitle" xml:space="preserve">
    <value>終了確認フォーム</value>
  </data>
  <data name="Text.Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Text.AndMore" xml:space="preserve">
    <value>その他はショートカットタブに記載</value>
  </data>
  <data name="Text.StartCapture" xml:space="preserve">
    <value>キャプチャー開始</value>
  </data>
  <data name="Text.CloseWindow" xml:space="preserve">
    <value>キャプチャーウィンドウを閉じる</value>
  </data>
  <data name="Text.CopyToClipboard" xml:space="preserve">
    <value>キャプチャー画像をクリップボードコピー</value>
  </data>
  <data name="Text.SaveImage" xml:space="preserve">
    <value>キャプチャー画像を保存</value>
  </data>
  <data name="Tray.TrayIcon" xml:space="preserve">
    <value>Kiritori - クリックでメニュー起動</value>
  </data>
  <data name="Text.OpenImageFile" xml:space="preserve">
    <value>画像を開く</value>
  </data>
  <data name="Text.HideAllWindows" xml:space="preserve">
    <value>すべてのウィンドウを最小化する</value>
  </data>
  <data name="Text.ShowAllWindows" xml:space="preserve">
    <value>すべてのウィンドウを表示する</value>
  </data>
  <data name="Text.CloseAllWindows" xml:space="preserve">
    <value>すべてのウィンドウを閉じる</value>
  </data>
  <data name="Text.MainPreferences" xml:space="preserve">
    <value>メニュー画面を開く - 設定</value>
  </data>
  <data name="Text.History" xml:space="preserve">
    <value>履歴</value>
  </data>
  <data name="Menu.File" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="Menu.Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="Menu.View" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="Menu.Window" xml:space="preserve">
    <value>ウィンドウ</value>
  </data>
  <data name="Menu.Zoom" xml:space="preserve">
    <value>拡大・縮小(%)</value>
  </data>
  <data name="Menu.Capture" xml:space="preserve">
    <value>画面キャプチャー</value>
  </data>
  <data name="Menu.CloseWindow" xml:space="preserve">
    <value>ウィンドウを閉じる</value>
  </data>
  <data name="Menu.Cut" xml:space="preserve">
    <value>切り取る(コピー・閉じる)</value>
  </data>
  <data name="Menu.Copy" xml:space="preserve">
    <value>クリップボードコピー</value>
  </data>
  <data name="Menu.EditPaint" xml:space="preserve">
    <value>ペイントで編集する</value>
  </data>
  <data name="Menu.SaveImage" xml:space="preserve">
    <value>画像を保存する</value>
  </data>
  <data name="Menu.OpenImage" xml:space="preserve">
    <value>画像を開く</value>
  </data>
  <data name="Menu.OriginalSize" xml:space="preserve">
    <value>オリジナルサイズ</value>
  </data>
  <data name="Menu.ZoomIn" xml:space="preserve">
    <value>拡大(+10%)</value>
  </data>
  <data name="Menu.ZoomOut" xml:space="preserve">
    <value>縮小(-10%)</value>
  </data>
  <data name="Menu.Size10" xml:space="preserve">
    <value>サイズ 10%</value>
  </data>
  <data name="Menu.Size50" xml:space="preserve">
    <value>サイズ 50%</value>
  </data>
  <data name="Menu.Size100" xml:space="preserve">
    <value>サイズ 100%</value>
  </data>
  <data name="Menu.Size150" xml:space="preserve">
    <value>サイズ 150%</value>
  </data>
  <data name="Menu.Size200" xml:space="preserve">
    <value>サイズ 200%</value>
  </data>
  <data name="Menu.Size500" xml:space="preserve">
    <value>サイズ 500%</value>
  </data>
  <data name="Menu.AlwaysOnTop" xml:space="preserve">
    <value>最前面固定切り替え</value>
  </data>
  <data name="Menu.DropShadow" xml:space="preserve">
    <value>ドロップシャドウ切り替え</value>
  </data>
  <data name="Menu.Minimize" xml:space="preserve">
    <value>最小化</value>
  </data>
  <data name="Menu.Opacity" xml:space="preserve">
    <value>不透明度</value>
  </data>
  <data name="Menu.Preferences" xml:space="preserve">
    <value>メニュー画面を開く - 設定</value>
  </data>
  <data name="Menu.Print" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="Menu.Exit" xml:space="preserve">
    <value>Kiritoriアプリを終了する</value>
  </data>
  <data name="Text.ToggleGuide" xml:space="preserve">
    <value>ガイド表示切り替え</value>
  </data>
  <data name="Text.CaptureOptionSetting" xml:space="preserve">
    <value>キャプチャー設定(キャプチャー中にキー押下)</value>
  </data>
  <data name="Text.OpenMenuOnAppStart" xml:space="preserve">
    <value>このメニュー画面を起動時に開く</value>
  </data>
  <data name="Text.OnAppLaunch" xml:space="preserve">
    <value>アプリ起動時設定</value>
  </data>
  <data name="Text.OpenMenuOnAppStart.Desc" xml:space="preserve">
    <value>アプリ起動時に自動的にこの設定ウィンドウを表示します。Windows起動時（サインイン時の起動）の設定は「全般」タブで行います。</value>
  </data>
  <data name="Text.Shortcuts" xml:space="preserve">
    <value>ショートカット</value>
  </data>
  <data name="Text.ConfirmSaveChanges" xml:space="preserve">
    <value>設定が保存されていません。保存しますか？</value>
  </data>
  <data name="Text.ConfirmSaveChangesTitle" xml:space="preserve">
    <value>変更の確認</value>
  </data>
  <data name="Text.ExitWithUnsavedChanges" xml:space="preserve">
    <value>未保存の変更があります。どうしますか？</value>
  </data>
  <data name="Text.ExitWithUnsavedChangesTail" xml:space="preserve">
    <value>「はい」で保存して終了 / 「いいえ」で破棄して終了 / 「キャンセル」で戻る</value>
  </data>
  <data name="Text.UnsavedChangesTitle" xml:space="preserve">
    <value>未保存の変更</value>
  </data>
  <data name="Common.On" xml:space="preserve">
    <value>オン</value>
  </data>
  <data name="Common.Off" xml:space="preserve">
    <value>オフ</value>
  </data>
  <data name="Common.Empty" xml:space="preserve">
    <value>(空)</value>
  </data>
  <data name="Common.PercentSuffix" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="Common.PixelSuffix" xml:space="preserve">
    <value>px</value>
  </data>
  <data name="Text.DiffLine" xml:space="preserve">
    <value>{0}: {1} -&gt; {2}</value>
  </data>
  <data name="Text.AndMoreNum" xml:space="preserve">
    <value>…他 {0} 件</value>
  </data>
  <data name="Setting.Display.isStartup" xml:space="preserve">
    <value>Windows サインイン時に起動</value>
  </data>
  <data name="Setting.Display.isOpenMenuOnAppStart" xml:space="preserve">
    <value>アプリ起動時にメニューを開く</value>
  </data>
  <data name="Setting.Display.isScreenGuide" xml:space="preserve">
    <value>ガイドラインを表示</value>
  </data>
  <data name="Setting.Display.isHighlightWindowOnHover" xml:space="preserve">
    <value>ホバーでウィンドウを強調表示</value>
  </data>
  <data name="Setting.Display.HoverHighlightColor" xml:space="preserve">
    <value>ホバー強調色</value>
  </data>
  <data name="Setting.Display.HoverHighlightAlphaPercent" xml:space="preserve">
    <value>ホバー強調の不透明度 (%)</value>
  </data>
  <data name="Setting.Display.HoverHighlightThickness" xml:space="preserve">
    <value>ホバー強調の線の太さ (px)</value>
  </data>
  <data name="Setting.Display.CaptureBackgroundColor" xml:space="preserve">
    <value>キャプチャ背景色</value>
  </data>
  <data name="Setting.Display.CaptureBackgroundAlphaPercent" xml:space="preserve">
    <value>キャプチャ背景の不透明度 (%)</value>
  </data>
  <data name="Setting.Display.HistoryLimit" xml:space="preserve">
    <value>履歴の保存件数</value>
  </data>
  <data name="Setting.Display.UICulture" xml:space="preserve">
    <value>表示言語</value>
  </data>
  <data name="Setting.Display.isFirstRunShown" xml:space="preserve">
    <value>初回起動状態管理</value>
  </data>
  <data name="Toast.Captured" xml:space="preserve">
    <value>キャプチャーしました</value>
  </data>
  <data name="Text.RunOCR" xml:space="preserve">
    <value>OCR実行</value>
  </data>
  <data name="Text.RunOCRDesc" xml:space="preserve">
    <value>OCR実行(結果をクリップボードコピー)</value>
  </data>
  <data name="Text.OCRCapture" xml:space="preserve">
    <value>OCRモードでキャプチャー</value>
  </data>
</root>